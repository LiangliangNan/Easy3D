##############################################################################
# GitHub Actions Workflow for building Easy3D on Windows, Ubuntu, and macOS
# Copyright (C) 2022 Liangliang Nan <liangliang.nan@gmail.com>
# Licensed under GNU LGPL-v3 (see the LICENCE file)
##############################################################################
name: Test Build Easy3D

on: [push, pull_request]

jobs:
  build:
    name: "Build on ${{ matrix.platform }} - ${{ matrix.build_type }}"
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest, macos-latest]
        build_type: [Debug, Release]
    runs-on: ${{ matrix.platform }}

    steps:
      # Checkout the code
      - uses: actions/checkout@v3

      # Set up dependencies for each platform
      - name: Install Dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update || true
          sudo apt-get install -y cmake ninja-build libgl1-mesa-dev mesa-common-dev \
              libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev

      - name: Install Dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update || true
          brew install cmake ninja

      - name: Install Dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install cmake --installargs '"ADD_CMAKE_TO_PATH=System"'
          choco install ninja

      # Configure the project
      - name: Configure
        run: |
          cmake -S . -B build/${{ matrix.build_type }} \
                -G Ninja \
                -DEasy3D_BUILD_PYTHON_BINDINGS=ON \
                -DEasy3D_BUILD_TUTORIALS=ON \
                -DEasy3D_BUILD_TESTS=ON

      # Build the project
      - name: Build
        run: cmake --build build/${{ matrix.build_type }}

      # Print environment and debug info
      - name: Print Debug Info
        run: |
          echo "Platform: ${{ matrix.platform }}"
          echo "Build Type: ${{ matrix.build_type }}"
          cmake --version
          ninja --version
